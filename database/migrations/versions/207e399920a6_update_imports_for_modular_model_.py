"""Update imports for modular model structure

Revision ID: 207e399920a6
Revises: dda1ab57a2d9
Create Date: 2025-10-03 12:56:31.932297

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '207e399920a6'
down_revision: Union[str, None] = 'dda1ab57a2d9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('compounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('formula', sa.String(length=50), nullable=True),
    sa.Column('cas_number', sa.String(length=20), nullable=True),
    sa.Column('molecular_weight', sa.Float(), nullable=True),
    sa.Column('density', sa.Float(), nullable=True),
    sa.Column('melting_point', sa.Float(), nullable=True),
    sa.Column('boiling_point', sa.Float(), nullable=True),
    sa.Column('solubility', sa.String(length=100), nullable=True),
    sa.Column('hazard_class', sa.String(length=50), nullable=True),
    sa.Column('supplier', sa.String(length=100), nullable=True),
    sa.Column('catalog_number', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cas_number'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_compounds_id'), 'compounds', ['id'], unique=False)
    op.create_table('chemical_additives',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('unit', sa.Enum('GRAM', 'MILLIGRAM', 'MICROGRAM', 'KILOGRAM', 'MICROLITER', 'MILLILITER', 'LITER', 'MICROMOLE', 'MILLIMOLE', 'MOLE', name='amountunit'), nullable=False),
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('compound_id', sa.Integer(), nullable=False),
    sa.Column('addition_order', sa.Integer(), nullable=True),
    sa.Column('addition_method', sa.String(length=50), nullable=True),
    sa.Column('final_concentration', sa.Float(), nullable=True),
    sa.Column('concentration_units', sa.String(length=20), nullable=True),
    sa.Column('purity', sa.Float(), nullable=True),
    sa.Column('lot_number', sa.String(length=50), nullable=True),
    sa.Column('supplier_lot', sa.String(length=100), nullable=True),
    sa.Column('mass_in_grams', sa.Float(), nullable=True),
    sa.Column('moles_added', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['compound_id'], ['compounds.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['experiment_id'], ['experimental_conditions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('experiment_id', 'compound_id', name='unique_experiment_compound')
    )
    op.create_index(op.f('ix_chemical_additives_id'), 'chemical_additives', ['id'], unique=False)
    # SQLite doesn't support ALTER COLUMN, so we need to handle this differently
    # The status column should already be compatible with the enum values
    # No changes needed for the status column in SQLite
    op.drop_column('result_files', 'description')
    op.create_index(op.f('ix_xrd_analysis_external_analysis_id'), 'xrd_analysis', ['external_analysis_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_xrd_analysis_external_analysis_id'), table_name='xrd_analysis')
    op.add_column('result_files', sa.Column('description', sa.TEXT(), nullable=True))
    # SQLite doesn't support ALTER COLUMN, so we need to handle this differently
    # The status column should already be compatible with the enum values
    # No changes needed for the status column in SQLite
    op.drop_index(op.f('ix_chemical_additives_id'), table_name='chemical_additives')
    op.drop_table('chemical_additives')
    op.drop_index(op.f('ix_compounds_id'), table_name='compounds')
    op.drop_table('compounds')
    # ### end Alembic commands ###
