"""ICPResults and relationships

Revision ID: dda1ab57a2d9
Revises: 0cb3f5b33b9e
Create Date: 2025-08-06 09:00:57.251825

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dda1ab57a2d9'
down_revision: Union[str, None] = '0cb3f5b33b9e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('icp_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('result_id', sa.Integer(), nullable=False),
    sa.Column('fe', sa.Float(), nullable=True),
    sa.Column('si', sa.Float(), nullable=True),
    sa.Column('ni', sa.Float(), nullable=True),
    sa.Column('cu', sa.Float(), nullable=True),
    sa.Column('mo', sa.Float(), nullable=True),
    sa.Column('zn', sa.Float(), nullable=True),
    sa.Column('mn', sa.Float(), nullable=True),
    sa.Column('cr', sa.Float(), nullable=True),
    sa.Column('co', sa.Float(), nullable=True),
    sa.Column('mg', sa.Float(), nullable=True),
    sa.Column('al', sa.Float(), nullable=True),
    sa.Column('all_elements', sa.JSON(), nullable=True),
    sa.Column('dilution_factor', sa.Float(), nullable=True),
    sa.Column('analysis_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('instrument_used', sa.String(), nullable=True),
    sa.Column('detection_limits', sa.JSON(), nullable=True),
    sa.Column('raw_label', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['result_id'], ['experimental_results.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_icp_results_id'), 'icp_results', ['id'], unique=False)
    op.create_index(op.f('ix_icp_results_result_id'), 'icp_results', ['result_id'], unique=True)
    op.create_index(op.f('ix_elemental_analysis_external_analysis_id'), 'elemental_analysis', ['external_analysis_id'], unique=True)
    # Skip ALTER COLUMN for SQLite - status column already works as VARCHAR with Enum validation in SQLAlchemy
    # op.alter_column('experiments', 'status',
    #            existing_type=sa.VARCHAR(length=11),
    #            type_=sa.Enum('ONGOING', 'COMPLETED', 'CANCELLED', name='experimentstatus'),
    #            existing_nullable=True)
    op.drop_column('result_files', 'description')
    op.create_index(op.f('ix_xrd_analysis_external_analysis_id'), 'xrd_analysis', ['external_analysis_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_xrd_analysis_external_analysis_id'), table_name='xrd_analysis')
    op.add_column('result_files', sa.Column('description', sa.TEXT(), nullable=True))
    # Skip ALTER COLUMN for SQLite - status column already works as VARCHAR
    # op.alter_column('experiments', 'status',
    #            existing_type=sa.Enum('ONGOING', 'COMPLETED', 'CANCELLED', name='experimentstatus'),
    #            type_=sa.VARCHAR(length=11),
    #            existing_nullable=True)
    op.drop_index(op.f('ix_elemental_analysis_external_analysis_id'), table_name='elemental_analysis')
    op.drop_index(op.f('ix_icp_results_result_id'), table_name='icp_results')
    op.drop_index(op.f('ix_icp_results_id'), table_name='icp_results')
    op.drop_table('icp_results')
    # ### end Alembic commands ###
